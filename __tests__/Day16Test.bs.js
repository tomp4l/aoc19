// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Day16$Aoc19 = require("../src/Day16.bs.js");
var Relude_List = require("relude/src/Relude_List.bs.js");
var Relude_String = require("relude/src/Relude_String.bs.js");

function strToList(s) {
  return Relude_List.map(Caml_format.caml_int_of_string)(Relude_String.splitList("", s));
}

Jest.describe("masks", (function (param) {
        Jest.test("pass 1 size 8", (function (param) {
                return Jest.Expect.toEqual(/* :: */[
                            1,
                            /* :: */[
                              0,
                              /* :: */[
                                -1,
                                /* :: */[
                                  0,
                                  /* :: */[
                                    1,
                                    /* :: */[
                                      0,
                                      /* :: */[
                                        -1,
                                        /* :: */[
                                          0,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Day16$Aoc19.mask(8, 1)));
              }));
        Jest.test("pass 2 size 8", (function (param) {
                return Jest.Expect.toEqual(/* :: */[
                            0,
                            /* :: */[
                              1,
                              /* :: */[
                                1,
                                /* :: */[
                                  0,
                                  /* :: */[
                                    0,
                                    /* :: */[
                                      -1,
                                      /* :: */[
                                        -1,
                                        /* :: */[
                                          0,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Day16$Aoc19.mask(8, 2)));
              }));
        return /* () */0;
      }));

Jest.describe("pass", (function (param) {
        var number = /* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              3,
              /* :: */[
                4,
                /* :: */[
                  5,
                  /* :: */[
                    6,
                    /* :: */[
                      7,
                      /* :: */[
                        8,
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ];
        Jest.test("pass 1 size 8", (function (param) {
                return Jest.Expect.toEqual(4, Jest.Expect.expect(Day16$Aoc19.pass(8, 1, number)));
              }));
        Jest.test("pass 2 size 8", (function (param) {
                return Jest.Expect.toEqual(8, Jest.Expect.expect(Day16$Aoc19.pass(8, 2, number)));
              }));
        Jest.test("pass 3 size 8", (function (param) {
                return Jest.Expect.toEqual(2, Jest.Expect.expect(Day16$Aoc19.pass(8, 3, number)));
              }));
        return /* () */0;
      }));

Jest.describe("phase", (function (param) {
        var number = /* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              3,
              /* :: */[
                4,
                /* :: */[
                  5,
                  /* :: */[
                    6,
                    /* :: */[
                      7,
                      /* :: */[
                        8,
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ];
        Jest.test("phase 1 size 8", (function (param) {
                return Jest.Expect.toEqual(/* :: */[
                            4,
                            /* :: */[
                              8,
                              /* :: */[
                                2,
                                /* :: */[
                                  2,
                                  /* :: */[
                                    6,
                                    /* :: */[
                                      1,
                                      /* :: */[
                                        5,
                                        /* :: */[
                                          8,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Day16$Aoc19.phase(8, number)));
              }));
        Jest.test("phase 2 size 8", (function (param) {
                return Jest.Expect.toEqual(/* :: */[
                            3,
                            /* :: */[
                              4,
                              /* :: */[
                                0,
                                /* :: */[
                                  4,
                                  /* :: */[
                                    0,
                                    /* :: */[
                                      4,
                                      /* :: */[
                                        3,
                                        /* :: */[
                                          8,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Day16$Aoc19.phase(8, Day16$Aoc19.phase(8, number))));
              }));
        Jest.test("phase 4 size 8", (function (param) {
                return Jest.Expect.toEqual(/* :: */[
                            0,
                            /* :: */[
                              1,
                              /* :: */[
                                0,
                                /* :: */[
                                  2,
                                  /* :: */[
                                    9,
                                    /* :: */[
                                      4,
                                      /* :: */[
                                        9,
                                        /* :: */[
                                          8,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Day16$Aoc19.phases(4, 8, number)));
              }));
        Jest.test("phase 100 size 8", (function (param) {
                var number = strToList("80871224585914546619083218645595");
                return Jest.Expect.toEqual(/* :: */[
                            2,
                            /* :: */[
                              4,
                              /* :: */[
                                1,
                                /* :: */[
                                  7,
                                  /* :: */[
                                    6,
                                    /* :: */[
                                      1,
                                      /* :: */[
                                        7,
                                        /* :: */[
                                          6,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Relude_List.take(8, Day16$Aoc19.phases(100, Curry._1(Relude_List.length, number), number))));
              }));
        return /* () */0;
      }));

Jest.describe("repeat list", (function (param) {
        return Jest.test("repeat", (function (param) {
                      return Jest.Expect.toEqual(/* :: */[
                                  1,
                                  /* :: */[
                                    2,
                                    /* :: */[
                                      1,
                                      /* :: */[
                                        2,
                                        /* :: */[
                                          1,
                                          /* :: */[
                                            2,
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ], Jest.Expect.expect(Day16$Aoc19.repeatList(3, /* :: */[
                                          1,
                                          /* :: */[
                                            2,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("offset", (function (param) {
        Jest.test("1 loop simple", (function (param) {
                return Jest.Expect.toEqual(/* :: */[
                            0,
                            /* :: */[
                              9,
                              /* :: */[
                                8,
                                /* :: */[
                                  7,
                                  /* :: */[
                                    6,
                                    /* :: */[
                                      5,
                                      /* :: */[
                                        4,
                                        /* :: */[
                                          3,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Relude_List.take(8, Day16$Aoc19.digitsAtOffset(1, 100, 50, /* :: */[
                                        1,
                                        /* [] */0
                                      ]))));
              }));
        var number = strToList("03036732577212944063491565474664");
        Jest.test("03036732577212944063491565474664", (function (param) {
                return Jest.Expect.toEqual(/* :: */[
                            8,
                            /* :: */[
                              4,
                              /* :: */[
                                4,
                                /* :: */[
                                  6,
                                  /* :: */[
                                    2,
                                    /* :: */[
                                      0,
                                      /* :: */[
                                        2,
                                        /* :: */[
                                          6,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect.expect(Relude_List.take(8, Day16$Aoc19.digitsAtOffset(100, 10000, 303673, number))));
              }));
        return /* () */0;
      }));

exports.strToList = strToList;
/*  Not a pure module */
